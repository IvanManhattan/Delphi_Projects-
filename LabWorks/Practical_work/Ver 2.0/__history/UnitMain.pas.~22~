unit UnitMain;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, CompanyClass, EmployeeClass, Vcl.ComCtrls,
  Vcl.ExtCtrls, Vcl.StdCtrls, UnitCompanyForm, System.Actions, Vcl.ActnList, DAOCompanies, DAOEmployees,
  UnitCreateEmployee, Vcl.Imaging.jpeg;

type
  PPointerPanelList = ^TPanelList;
  TPanelList = record
    panel: TPanel;
    employee: TEmployee;
    next: PPointerPanelList;
    prev: PPointerPanelList;
  end;

  TFormMain = class(TForm)
    PanelTop: TPanel;
    PanelBottom: TPanel;
    PanelCentral: TPanel;
    ScrollBoxCompanies: TScrollBox;
    PanelControlCompanies: TPanel;
    ButtonAddEmployee: TButton;
    ButtonViewCompanies: TButton;
    ButtonEditEmployee: TButton;
    ButtonDeleteEmployee: TButton;
//    procedure Button1Click(Sender: TObject);
//    procedure Button2Click(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure ButtonViewCompaniesClick(Sender: TObject);
    procedure ButtonAddEmployeeClick(Sender: TObject);
    procedure RepaintScrollBox(pointerList: PPointerPanelList; var tmpPanel: TPanel);
    procedure ClearScrollBox;
//    procedure AddPanel(var tmpPanel: TPanel; employee: TEmployee);
  private

  public

  end;



var
  FormMain: TFormMain;

implementation

uses
  IniFiles, ShellAPI;
{$R *.dfm}

var
  PointerCompanies: PPointerCompanies;
  PointerEmployees: PPointerEmployees;
  listOfPanel: PPointerPanelList;


(*  procedure TFormMain.Button1Click(Sender: TObject);
  var
    myPointer: PPointerCompanies;
  begin
//    pointerOf := pointerOf^.next;
    pointerOf^.companyFromList.nameOfCompany := Edit1.Text;
    UnitDAO_saveList;
  end;

  procedure TFormMain.Button2Click(Sender: TObject);
  var
    myPointer: PPointerCompanies;
  begin
    pointerOf := UnitDAO_initList;
    pointerOf := pointerOf^.next;
//    myPointer := pointerOf;
    Edit2.Text := pointerOf^.companyFromList.nameOfCompany;
  end;
*)



  procedure TFormMain.ButtonAddEmployeeClick(Sender: TObject);
  var
    Res: TModalResult;
    Employee: TEmployee;
    panelPointer: PPointerPanelList;
    panel: TPanel;
  begin
    FormCreateEmployee.Show;
    Res := formCreateEmployee.ShowForNewEmployee(Employee);

    if Res = mrCancel then
      Exit;

    DAOEmployees_AddEmployee(Employee);
//    panelPointer(panel, Employee);
(*    while panelPointer^.next <> nil do
    begin
      panelPointer := panelPointer^.next;
    end;

    new(panelPointer^.next);
    panelPointer^.next^.prev := panelPointer;
    panelPointer := panelPointer^.next;
    panelPointer^.employee := Employee;
    RepaintScrollBox(panelPointer, panel);
*)

  end;

  procedure TFormMain.ButtonViewCompaniesClick(Sender: TObject);
  begin
    FormEmployeesList.Show;
  end;

  procedure TFormMain.FormCreate(Sender: TObject);
  var
    FileName: String;
    iniSettings: TMemIniFile;
    tmpPanel: TPanel;
    tmpName, tmpDate, tmpSpeciality, tmpEdu, tmpPrPos, tmpSal: TEdit;
    xPanel, yPanel: PPointerPanelList;
    currEmployee: PPointerEmployees;
    topCoordPanel, leftCoordPanel: Integer;


  begin
    Caption := Application.Title;

    FileName := ExtractFilePath(Application.ExeName) + 'settings.ini';
    iniSettings := TMemIniFile.Create(FileName);
    try
      Left := iniSettings.ReadInteger('Window', 'Left', 0);
      Top := iniSettings.ReadInteger('Window', 'Top', 0);
      Width := iniSettings.ReadInteger('Window', 'Width', 0);
      Height := iniSettings.ReadInteger('Window', 'Height', 0);
    finally
      iniSettings.Free;
    end;

    DAOEmployees_initList;
    currEmployee := getListOfEmployees;
    currEmployee := currEmployee^.next;

    new(xPanel);
    xPanel^.prev := nil;
    listOfPanel := xPanel;

    while currEmployee <> nil do
    begin
      yPanel := xPanel;
      yPanel^.employee := currEmployee^.employeeFromList;

      //
      RepaintScrollBox(yPanel, tmpPanel);
      //

      yPanel^.panel := tmpPanel;

//      topCoordPanel := topCoordPanel + 200;
      currEmployee := currEmployee^.next;

      if currEmployee <> nil then
      begin
        new(xPanel);
        yPanel^.next := xPanel;
        xPanel^.prev := yPanel;
      end
      else
      begin
        yPanel^.next := nil;
      end;

    end;


  end;

  procedure TFormMain.FormDestroy(Sender: TObject);
  var
    FileName: String;
    iniSettings: TMemIniFile;
  begin
    FileName := ExtractFilePath(Application.ExeName) + 'settings.ini';
  iniSettings := TMemIniFile.Create(FileName);
    try
      iniSettings.WriteInteger('Window', 'Left', Left);
      iniSettings.WriteInteger('Window', 'Top', Top);
      iniSettings.WriteInteger('Window', 'Width', Width);
      iniSettings.WriteInteger('Window', 'Height', Height);
      iniSettings.UpdateFile;
    finally
      iniSettings.Free;
    end;
  end;

  procedure TFormMain.RepaintScrollBox(pointerList: PPointerPanelList; var tmpPanel: TPanel);
  var
    tmpName, tmpDate, tmpSpeciality, tmpEdu, tmpPrPos, tmpSal: TEdit;
    currPanel: PPointerPanelList;
    currEmployee: PPointerEmployees;
    topCoordPanel, leftCoordPanel: Integer;

  begin

    if pointerList^.prev = nil then
    begin
      topCoordPanel := 0;
    end
    else
    begin
      topCoordPanel := pointerList^.prev.panel.Top + 150;
    end;

    leftCoordPanel := 0;

    tmpPanel := TPanel.Create(ScrollBoxCompanies);
    tmpPanel.Parent	:= ScrollBoxCompanies;
    tmpPanel.Width := ScrollBoxCompanies.Width - 200;
    tmpPanel.Height	:= 150;
    tmpPanel.Left	:= (ScrollBoxCompanies.Width - tmpPanel.Width) div 3;
    tmpPanel.Top := topCoordPanel + 50;

    tmpName := TEdit.Create(tmpPanel);
    with tmpName do
    begin
      Parent := tmpPanel;
      Left := tmpPanel.Width - 350;
      Top := tmpPanel.Height - 130;
      Text := pointerList^.employee.fullName;
    end;

    tmpDate := TEdit.Create(tmpPanel);
    with tmpDate do
    begin
      Parent := tmpPanel;
      Left := tmpPanel.Width - 350;
      Top := tmpPanel.Height - 90;
      Text := DateToStr(pointerList^.employee.dateOfBirth);
    end;

    tmpSpeciality := TEdit.Create(tmpPanel);
    with tmpSpeciality do
    begin
      Parent := tmpPanel;
      Left := tmpPanel.Width - 350;
      Top := tmpPanel.Height - 50;
      Text := pointerList^.employee.specialityOf;
    end;

    tmpEdu := TEdit.Create(tmpPanel);
    with tmpEdu do
    begin
      Parent := tmpPanel;
      Left := tmpPanel.Width - 175;
      Top := tmpPanel.Height - 130;
      Text := BoolToStr(pointerList^.employee.hasHigherEducation);
    end;

    tmpPrPos := TEdit.Create(tmpPanel);
    with tmpPrPos do
    begin
      Parent := tmpPanel;
      Left := tmpPanel.Width - 175;
      Top := tmpPanel.Height - 90;
      Text := pointerList^.employee.preferredPosition;
    end;

    tmpSal := TEdit.Create(tmpPanel);
    with tmpSal do
    begin
      Parent := tmpPanel;
      Left := tmpPanel.Width - 175;
      Top := tmpPanel.Height - 50;
      Text := FloatToStr(pointerList^.employee.minSalary);
    end;

  end;

  procedure TFormMain.ClearScrollBox;
  var
    n : integer;
  begin
    //    ScrollBoxCompanies.visible:=true;
    with ScrollBoxCompanies do
    begin
      repeat
        n := ControlCount - 1;
        Controls[n].Free;
      until ControlCount = 0;
    end;
    //    ScrollBoxCompanies.visible:=true;
  end;

(*  procedure TFormMain.AddPanel(var tmpPanel: TPanel; employee: TEmployee);
  var
    currPanel: PPointerPanelList;
    tmpName, tmpDate, tmpSpeciality, tmpEdu, tmpPrPos, tmpSal: TEdit;

  begin

    currPanel := listOfPanel;
    while currPanel^.next	<> nil do
    begin
      currPanel := currPanel^.next;
    end;

    new(currPanel^.next);
    currPanel^.next^.prev	:= currPanel;
    currPanel := currPanel^.next;
    currPanel^.panel := tmpPanel;
    currPanel^.employee	:= employee;
    currPanel^.next := nil;

  end;
*)

end.
